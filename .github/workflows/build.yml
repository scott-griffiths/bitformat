name: Build

on:
  push:
    branches: [stable, main]
    tags: [v*]
  pull_request:
    branches: ['**']

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ matrix.os.name }} ${{ matrix.python.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: üêß
            runs-on: ubuntu-latest
          - name: üçé
            runs-on: macos-latest
          - name: ü™ü
            runs-on: windows-latest
        python:
          - name: CPython 3.11
            major_dot_minor: '3.11'
            action: '3.11'
          - name: CPython 3.12
            major_dot_minor: '3.12'
            action: '3.12'
          - name: CPython 3.13
            major_dot_minor: '3.13'
            action: '3.13'
    steps:
      - uses: actions/checkout@v3

      # Setup steps
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.action }}
          architecture: x64

      # Install required packages
      - name: Setup environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.1"

      - name: Set up environment
        run: |
          uv venv
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            source .venv\\Scripts\\activate
          else
            source .venv/bin/activate
          fi

      # Build steps
      - name: Build sdist and wheel
        run: |
          # Only build sdist on one combination
          if [[ "${{ matrix.os.runs-on }}" == "ubuntu-latest" && "${{ matrix.python.action }}" == "3.11" ]]; then
            python -m build --sdist
          fi

          # Build Rust wheels
          uv pip install -r pyproject.toml -r dev-requirements.txt
          uvx maturin build --release

          mkdir -p dist
          cp target/wheels/* dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os.runs-on }}-${{ matrix.python.action }}
          path: dist/*
          if-no-files-found: error
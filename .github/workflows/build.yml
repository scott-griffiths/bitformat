name: Build

on:
  push:
    branches: [stable, main]
    tags: [v*]
  pull_request:
    branches: ['**']

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Build for Python 3.11, 3.12, 3.13
          CIBW_BUILD: "cp311-* cp312-* cp313-*"

          # Different architectures
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 x86"

          # Rust setup
          CIBW_BEFORE_ALL_LINUX: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'

          # Skip testing for cross-compiled wheels
          CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} *-*macos_arm64 *-*win32"

          # Use manylinux2014 for broader compatibility
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014

      - name: Build sdist
        if: matrix.os == 'ubuntu-latest'
        run: |
          pip install build
          python -m build --sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os }}
          path: ./wheelhouse/*
          if-no-files-found: error